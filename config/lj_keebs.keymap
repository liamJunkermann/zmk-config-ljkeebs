/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        lh_space {
            bindings = <&kp SPACE>;
            key-positions = <54 24>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            display-name = "Base";
            bindings = <
&kp ESC         &kp N1  &kp N2            &kp N3        &kp N4        &kp N5                          &kp N6  &kp N7             &kp N8         &kp N9         &kp N0         &kp BACKSLASH
&kp GRAVE       &kp Q   &kp W             &kp E         &kp R         &kp T                           &kp Y   &kp U              &kp I          &kp O          &kp P          &kp BACKSPACE
&kp TAB         &kp A   &kp S             &kp D         &kp F         &kp G                           &kp H   &kp J              &kp K          &kp L          &kp SEMICOLON  &kp SINGLE_QUOTE
&kp LEFT_SHIFT  &kp Z   &kp X             &kp C         &kp V         &kp B                           &kp N   &kp M              &kp COMMA      &kp DOT        &kp SLASH      &kp RIGHT_SHIFT
                        &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &mo 1   &kp SPACE    &kp SPACE  &mo 2   &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_GUI
            >;
        };

        raise {
            bindings = <
&trans     &kp F1     &kp F2     &kp F3    &kp F4          &kp F5                               &kp F6            &kp F7             &kp F8    &kp F9     &kp F10   &kp F11
&kp TILDE  &kp N1     &kp N2     &kp N3    &kp N4          &kp N5                               &kp N6            &kp N7             &kp N8    &kp N9     &kp N0    &kp F12
&trans     &kp EXCL   &kp AT     &kp HASH  &kp DOLLAR      &kp PERCENT                          &kp CARET         &kp AMPS           &kp STAR  &kp LPAR   &kp RPAR  &kp PIPE
&trans     &kp EQUAL  &kp MINUS  &kp PLUS  &kp LEFT_BRACE  &kp RBRC                             &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SEMI  &kp COLON  &kp BSLH  &trans
                      &trans     &trans    &trans          &trans       &kp ENTER    &kp ENTER  &mo 3             &trans             &trans    &trans
            >;
        };

        lower {
            bindings = <
&trans  &trans        &trans            &trans             &trans     &trans                             &trans         &trans        &trans        &trans         &trans        &trans
&trans  &kp INS       &kp PRINTSCREEN   &kp K_APPLICATION  &none      &none                              &kp PAGE_UP    &kp LA(LEFT)  &kp UP_ARROW  &kp LA(RIGHT)  &kp RA(BSPC)  &kp BACKSPACE
&trans  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT     &none      &kp CAPSLOCK                       &kp PAGE_DOWN  &kp LEFT      &kp DOWN      &kp RIGHT      &kp DELETE    &kp ENTER
&trans  &kp LG(Z)     &kp LG(X)         &kp LG(C)          &kp LG(V)  &none                              &none          &kp HOME      &none         &kp END        &none         &trans
                      &trans            &trans             &trans     &mo 3         &kp ENTER    &trans  &trans         &trans        &trans        &trans
            >;
        };

        layer_3 {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &none                 &none                     &none   &none         &none             &none         &none  &none
&none       &none           &none         &none         &none                 &none                     &none   &none         &none             &none         &none  &none
&none       &none           &none         &none         &kp C_BRIGHTNESS_INC  &none                     &none   &kp C_VOL_DN  &kp C_MUTE        &kp C_VOL_UP  &none  &none
&trans      &studio_unlock  &none         &none         &kp C_BRI_DEC         &none                     &none   &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT    &none  &none
                            &trans        &trans        &trans                &trans  &trans    &trans  &trans  &trans        &trans            &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};